sqlFileCon <- file("GetRawData.sql", "r")
sqlString <- gsub("\t", " ", paste(readLines(sqlFileCon), collapse=" "))
channel <- odbcConnect("SQLServerVivaldi")
rawdata <- sqlQuery(channel, sqlString)
close(channel)
save(rawdata, file = "DataSet.Rda")
rm(list = ls())
load("DataSet.Rda")
View(rawdata)
class(rawdata)
summary(rawadata)
lapply(rawdata, class)
rawdata$Date <- as.date(rawadata$Date)
rawdata$Date <- as.Date(rawadata$Date)
rawdata$Date <- as.Date(rawdata$Date)
lapply(rawdata, class)
LastDate <- max(RawData$Date, na.rm=TRUE)
library(RODBC)
sqlFileCon <- file("GetRawData.sql", "r")
sqlString <- gsub("\t", " ", paste(readLines(sqlFileCon), collapse=" "))
channel <- odbcConnect("SQLServerVivaldi")
RawData <- sqlQuery(channel, sqlString)
close(channel)
save(rawdata, file = "DataSet.Rda")
RawData$Date <- as.Date(RawData$Date)
LastDate <- max(RawData$Date, na.rm=TRUE)
fix(LastDate)
Last6mRaw <- RawData[RawData$Date >= as.Date(as.yearmon(LastDate - 0.5, frac=1))]  ]
as.Date(as.yearmon(LastDate - 0.5, frac=1))]
Last6mRaw <- RawData[RawData$Date >=
as.Date(as.yearmon(LastDate - 0.5, frac=1))]
library(zoo)
Last6mRaw <- RawData[RawData$Date >=
as.Date(as.yearmon(LastDate - 0.5, frac=1))]
rm(list = ls())
library(RODBC)
library(zoo)
sqlFileCon <- file("GetRawData.sql", "r")
sqlString <- gsub("\t", " ", paste(readLines(sqlFileCon), collapse=" "))
channel <- odbcConnect("SQLServerVivaldi")
RawData <- sqlQuery(channel, sqlString)
close(channel)
save(rawdata, file = "DataSet.Rda")
RawData$Date <- as.Date(RawData$Date)
LastDate <- max(RawData$Date, na.rm=TRUE)
Last6mRaw <- RawData[RawData$Date >=
as.Date(as.yearmon(LastDate - 0.5, frac=1))]
Last6mRaw <- RawData[Date >=
as.Date(as.yearmon(LastDate - 0.5, frac=1))]
View(RawData)
Last6mRaw <- RawData[RawData$Date >=
as.Date(as.yearmon(LastDate - 0.5, frac=1))]
RawData$Date >=
as.Date(as.yearmon(LastDate - 0.5, frac=1))
RawData[RawData$Date >=
as.Date(as.yearmon(LastDate - 0.5, frac=1))]
rm(list = ls())
library(RODBC)
library(zoo)
sqlFileCon <- file("GetRawData.sql", "r")
sqlString <- gsub("\t", " ", paste(readLines(sqlFileCon), collapse=" "))
channel <- odbcConnect("SQLServerVivaldi")
RawData <- as.data.frame(sqlQuery(channel, sqlString))
close(channel)
save(rawdata, file = "DataSet.Rda")
RawData$Date <- as.Date(RawData$Date)
LastDate <- max(RawData$Date, na.rm=TRUE)
rm(list = ls())
library(RODBC)
library(zoo)
sqlFileCon <- file("GetRawData.sql", "r")
sqlString <- gsub("\t", " ", paste(readLines(sqlFileCon), collapse=" "))
channel <- odbcConnect("SQLServerVivaldi")
RawData <- as.data.frame(sqlQuery(channel, sqlString))
close(channel)
save(RawData, file = "DataSet.Rda")
RawData$Date <- as.Date(RawData$Date)
LastDate <- max(RawData$Date, na.rm=TRUE)
Last6mRaw <- RawData[RawData$Date >=
as.Date(as.yearmon(LastDate - 0.5, frac=1)),]
View(Last6mRaw)
FundsNo <- levels(Last6mRaw$FundCode)
fix(FundsNo)
library(RODBC)
library(zoo)
sqlFileCon <- file("GetRawData.sql", "r")
sqlString <- gsub("\t", " ", paste(readLines(sqlFileCon), collapse=" "))
channel <- odbcConnect("SQLServerVivaldi")
RawData <- as.data.frame(sqlQuery(channel, sqlString))
close(channel)
save(RawData, file = "DataSet.Rda")
rm(list = ls())
load("DataSet.Rda")
RawData$Date <- as.Date(RawData$Date)
LastDate <- max(RawData$Date, na.rm=TRUE)
Last6mRaw <- RawData[RawData$Date >=
as.Date(as.yearmon(LastDate - 0.5, frac=1)),]
FundsNo <- levels(Last6mRaw$FundCode)
sapply(Last6mRaw, max(CCYExposure)-min(CCYExposure))
with(Last6mRaw(sapply(FundCode, max(CCYExposure) - min(CCYExposure)))
)
sapply(FundCode, max(CCYExposure) - min(CCYExposure))
sapply(Last6mRaw$FundCode, max(Last6mRaw$CCYExposure) - min(Last6mRaw$CCYExposure))
sapply(Last6mRaw$FundCode, "max(Last6mRaw$CCYExposure) - min(Last6mRaw$CCYExposure)")
sapply(split(Last6mRaw$CCYExsposure, FundCode), range)
sapply(split(Last6mRaw$CCYExposure, Last6mRaw$FundCode), range)
sapply(split(Last6mRaw$CCYExposure, Last6mRaw$FundCode), range, simplify = TRUE)
Ranges <- sapply(split(Last6mRaw$CCYExposure, Last6mRaw$FundCode), range, simplify = TRUE)
View(Ranges)
Ranges <- t(sapply(split(Last6mRaw$CCYExposure, Last6mRaw$FundCode), range, simplify = TRUE))
View(Ranges)
Last6mRaw <- RawData[RawData$Date >=
as.Date(as.yearmon(LastDate - 0.5, frac=1)) &
!is.na(RawData$CCYExposure)),]
Last6mRaw <- RawData[RawData$Date >=
as.Date(as.yearmon(LastDate - 0.5, frac=1)) &
!is.na(RawData$CCYExposure),]
FundsNo <- levels(Last6mRaw$FundCode)
Ranges <- t(sapply(split(Last6mRaw$CCYExposure, Last6mRaw$FundCode), range, simplify = TRUE))
View(Ranges)
View(Last6mRaw)
RawData$Date <- as.Date(RawData$Date)
LastDate <- max(RawData$Date, na.rm=TRUE)
Last6mRaw <- RawData[RawData$Date >=
as.Date(as.yearmon(LastDate - 0.5, frac=1)) &
!is.na(RawData$CCYExposure),]
fix(FundsNo)
View(Ranges)
View(Ranges)
names(Ranges)
columnnames(Ranges)
columnames(Ranges)
colnames(Ranges)
Last6mRaw <- RawData[RawData$Date >=
as.Date(as.yearmon(LastDate - 0.5, frac=1)) &
!is.na(RawData$CCYExposure) &
RawData$CCYExposure <> 0,]
Last6mRaw <- RawData[RawData$Date >=
as.Date(as.yearmon(LastDate - 0.5, frac=1)) &
!is.na(RawData$CCYExposure) &
RawData$CCYExposure != 0,]
FundsNo <- levels(Last6mRaw$FundCode)
Ranges <- t(sapply(split(Last6mRaw$CCYExposure, Last6mRaw$FundCode),
range))
min(Last6mRaw$Date)
LastDate
min(as.Date(Last6mRaw$Date))
View(Last6mRaw)
Last6mRaw <- RawData[RawData$Date >=
as.Date(as.yearmon(LastDate - 0.5, frac=1)) &
(!is.na(RawData$CCYExposure)),]
View(Last6mRaw)
as.Date(as.yearmon(LastDate - 0.5, frac=1))
as.Date(as.yearmon(LastDate - 0.5), frac=1)
as.Date(as.yearmon(LastDate - 0.5))
as.Date(as.yearmon(LastDate) - 0.5))
as.Date(as.yearmon(LastDate) - 0.5)
as.Date(as.yearmon(LastDate) - 0.5, frac= 1)
Last6mRaw <- RawData[RawData$Date >=
as.Date(as.yearmon(LastDate) - 0.5) &
(!is.na(RawData$CCYExposure)),]
View(Last6mRaw)
count))
function(x) length(unique(x))))
FundCounts <- sapply(split(Last6mRaw$FundCode, Last6mRaw$Date),
function(x) length(unique(x)))
fix(FundCounts)
FundCounts <- t(sapply(split(Last6mRaw$FundCode, Last6mRaw$Date),
function(x) length(unique(x))))
View(FundCounts)
FundCounts <- as.data.frame(sapply(split(Last6mRaw$FundCode, Last6mRaw$Date),
function(x) length(unique(x))))
View(FundCounts)
FundsNo <- levels(Last6mRaw$FundCode)
FundsNo <- levels(Last6mRaw$FundCode)
FundCounts <- as.data.frame(sapply(split(Last6mRaw$FundCode, Last6mRaw$Date),
function(x) length(unique(x))))
Ranges <- t(sapply(split(Last6mRaw$CCYExposure, Last6mRaw$FundCode),
range))
library(RODBC)
library(zoo)
sqlFileCon <- file("GetRawData.sql", "r")
sqlString <- gsub("\t", " ", paste(readLines(sqlFileCon), collapse=" "))
channel <- odbcConnect("SQLServerVivaldi")
RawData <- as.data.frame(sqlQuery(channel, sqlString))
close(channel)
save(RawData, file = "DataSet.Rda")
rm(list = ls())
load("DataSet.Rda")
RawData$Date <- as.Date(RawData$Date)
LastDate <- max(RawData$Date, na.rm=TRUE)
Last6mRaw <- RawData[RawData$Date >=
as.Date(as.yearmon(LastDate) - 0.5) &
(!is.na(RawData$CCYExposure)),]
FundsNo <- levels(Last6mRaw$FundCode)
FundCounts <- as.data.frame(sapply(split(Last6mRaw$FundCode, Last6mRaw$Date),
function(x) length(unique(x))))
Ranges <- t(sapply(split(Last6mRaw$CCYExposure, Last6mRaw$FundCode),
range))
load("DataSet.Rda")
RawData$Date <- as.Date(RawData$Date)
LastDate <- max(RawData$Date, na.rm=TRUE)
Last6mRaw <- RawData[RawData$Date >
as.Date(as.yearmon(LastDate) - 0.5, frac = 1) &
(!is.na(RawData$CCYExposure)),]
FundsNo <- levels(Last6mRaw$FundCode)
FundCounts <- as.data.frame(sapply(split(Last6mRaw$FundCode, Last6mRaw$Date),
function(x) length(unique(x))))
Ranges <- as.data.frame(t(sapply(split(Last6mRaw$CCYExposure, Last6mRaw$FundCode),
range)))
View(Ranges)
colnames(Ranges)
length(Ranges$V1)
View(Last6mRaw)
min(last6mRaw$Date)
min(Last6mRaw$Date)
View(FundCounts)
FundDatesCounts <- as.data.frame(sapply(split(Last6mRaw$Date, Last6mRaw$FundCode),
function(x) length(unique(x))))
View(FundDatesCounts)
Last6mRaw <- RawData[RawData$Date >
as.Date(as.yearmon(LastDate) - 0.5, frac = 1) &
(!is.na(RawData$CCYExposure)),]
library(xlsx)
library(xlsx)
write.table(Last6mRaw, "mydata.csv", sep="\t")
Last6mRaw <- droplevels(Last6mRaw$FundCode)
FundsNo <- levels(Last6mRaw$FundCode)
Last6mRaw$FundCode
Last6mRaw <- RawData[RawData$Date >
as.Date(as.yearmon(LastDate) - 0.5, frac = 1) &
(!is.na(RawData$CCYExposure)),]
rm(list = ls())
load("DataSet.Rda")
RawData$Date <- as.Date(RawData$Date)
LastDate <- max(RawData$Date, na.rm=TRUE)
Last6mRaw <- RawData[RawData$Date >
as.Date(as.yearmon(LastDate) - 0.5, frac = 1) &
(!is.na(RawData$CCYExposure)),]
Last6mRaw <- droplevels(Last6mRaw$FundCode)
library(RODBC)
library(zoo)
Last6mRaw <- RawData[RawData$Date >
as.Date(as.yearmon(LastDate) - 0.5, frac = 1) &
(!is.na(RawData$CCYExposure)),]
Last6mRaw$FundCode <- factors(Last6mRaw$FundCode)
Last6mRaw$FundCode <- factor(Last6mRaw$FundCode)
FundsNo <- levels(Last6mRaw$FundCode)
FundCounts <- as.data.frame(sapply(split(Last6mRaw$FundCode, Last6mRaw$Date),
function(x) length(unique(x))))
FundDatesCounts <- as.data.frame(sapply(split(Last6mRaw$Date, Last6mRaw$FundCode),
function(x) length(unique(x))))
Ranges <- as.data.frame(t(sapply(split(Last6mRaw$CCYExposure, Last6mRaw$FundCode),
range)), name)
Ranges <- as.data.frame(t(sapply(split(Last6mRaw$CCYExposure, Last6mRaw$FundCode),
range)))
View(RawData)
View(Ranges)
View(Ranges)
colnames(Ranges) <- c("Min", "Max")
View(Ranges)
library(ggplot2)
library(scale)
library(scales)
Ranges$Range <- Ranges$Max-Ranges$Min
View(Ranges)
FundsOverThresh <- Ranges[Ranges$Range > threshold,]
threshold <- 0.1
FundsOverThresh <- Ranges[Ranges$Range > threshold,]
View(FundsOverThresh)
View(Ranges)
FundsOverThresh <- Ranges[Ranges$Range > threshold &
!Ranges$row.names %in% "FOUND*",]
View(FundsOverThresh)
!Ranges$row.names %in% "FOUND*"
!Ranges$row.names %in% "FOUND"
!Ranges$row.names %in% "FOUNDGSBO"
View(Ranges)
!(Ranges$row.names %in% "FOUNDGSBO")
(Ranges$row.names %in% "FOUNDGSBO")
(Ranges$row.names
)
Ranges
FundsOverThresh <- Ranges[Ranges$Range > threshold &
!which(rownames(Ranges) %in% "FOUND*",]
FundsOverThresh <- Ranges[Ranges$Range > threshold &
!which(rownames(Ranges) %in% "FOUND*"),]
which(rownames(Ranges) %in% "FOUND*")
which(rownames(Ranges) %in% "FOUNDGSBO")
which(rownames(Ranges) %in% subset(rownames(Ranges), subset= grepl(glob2rx("FOUND*")))))
which(rownames(Ranges) %in% subset(rownames(Ranges), subset= grepl(glob2rx("FOUND*"))))
which(rownames(Ranges) %in% subset(rownames(Ranges), subset= grepl(glob2rx("FOUND*"), rownames(Ranges))))
FOUNDsub <- which(rownames(Ranges) %in%
subset(rownames(Ranges),
subset = grepl(glob2rx("FOUND*"),
rownames(Ranges))))
threshold <- 0.1
FundsOverThresh <- Ranges[Ranges$Range > threshold &
!which(rownames(Ranges) != FOUNDsub),]
FundsOverThresh <- Ranges[Ranges$Range > threshold &
!which(rownames(Ranges) %in% FOUNDsub),]
!which(rownames(Ranges) %in% FOUNDsub)
which(rownames(Ranges) %in% FOUNDsub)
FOUNDsub
which(rownames(Ranges) %in% rownames(Ranges)[FOUNDsub])
!which(rownames(Ranges) %in% rownames(Ranges)[FOUNDsub])
FundsOverThresh <- Ranges[Ranges$Range > threshold &
!which(rownames(Ranges) %in% rownames(Ranges)[FOUNDsub]),]
rownames(Ranges) %in% rownames(Ranges)[FOUNDsub]
!rownames(Ranges) %in% rownames(Ranges)[FOUNDsub]
FundsOverThresh <- Ranges[Ranges$Range > threshold &
!rownames(Ranges) %in% rownames(Ranges)[FOUNDsub],]
View(FundsOverThresh)
FundsOverThresh <- Ranges[order(-range),]
View(FundsOverThresh)
FundsOverThresh <- Ranges[order(-Range),]
FundsOverThresh <- FundsOverThresh[order(-Range),]
View(FundsOverThresh)
FundsOverThresh <- FundsOverThresh[order(Range),]
test <- FundsOverThresh[order(Range),]
FundsOverThresh <- FundsOverThresh[with(FundsOverThresh(order(Range)),]
FundsOverThresh <- FundsOverThresh[with(FundsOverThresh,order(Range)),]
View(FundsOverThresh)
FundsOverThresh <- FundsOverThresh[order(-FundsOverThresh$Range),]
View(FundsOverThresh)
source('~/.active-rstudio-document', echo=TRUE)
rm(list = ls())
load("DataSet.Rda")
RawData$Date <- as.Date(RawData$Date)
LastDate <- max(RawData$Date, na.rm=TRUE)
Last6mRaw <- RawData[RawData$Date >
as.Date(as.yearmon(LastDate) - 0.5, frac = 1) &
(!is.na(RawData$CCYExposure)),]
Last6mRaw$FundCode <- factor(Last6mRaw$FundCode)
FundsNo <- levels(Last6mRaw$FundCode)
FundCounts <- as.data.frame(sapply(split(Last6mRaw$FundCode, Last6mRaw$Date),
function(x) length(unique(x))))
FundDatesCounts <- as.data.frame(sapply(split(Last6mRaw$Date, Last6mRaw$FundCode),
function(x) length(unique(x))))
Ranges <- as.data.frame(t(sapply(split(Last6mRaw$CCYExposure, Last6mRaw$FundCode),
range)))
colnames(Ranges) <- c("Min", "Max")
Ranges$Range <- Ranges$Max-Ranges$Min
FOUNDsub <- which(rownames(Ranges) %in%
subset(rownames(Ranges),
subset = grepl(glob2rx("FOUND*"),
rownames(Ranges))))
threshold <- 0.1
FundsOverThresh <- Ranges[Ranges$Range > threshold &
!rownames(Ranges) %in% rownames(Ranges)[FOUNDsub],]
FundsOverThresh <- FundsOverThresh[order(-FundsOverThresh$Range),]
View(Last6mRaw)
PltsData <- Last6mRaw[FundCode %in% rawnames(FundsOverThresh),]
View(Last6mRaw)
PltsData <- Last6mRaw[Last6mRaw$FundCode %in% rawnames(FundsOverThresh),]
PltsData <- Last6mRaw[Last6mRaw$FundCode %in% rownames(FundsOverThresh),]
View(PltsData)
levels(PltsData$FundCode)
PltsData$FundCode <- factor(PltsData$FundCode)
levels(PltsData$FundCode)
library(ggplot2)
View(PltsData)
ggplot()+
geom_bar(data=PltsData,
aes(y=CCYExposure, x = Date),
stat= "identity") +
facet_grid(. ~ FundCode) +
scale_y_continuous(labels =percent)
ggplot()+
geom_path(data=PltsData,
aes(y=CCYExposure, x = Date, group=FundCode),
stat= "identity") +
facet_grid(. ~ FundCode) +
scale_y_continuous(labels =percent)
ggplot()+
geom_path(data=PltsData,
aes(y=CCYExposure, x = Date, group=FundCode),
stat= "identity") +
facet_grid(~ FundCode .) +
scale_y_continuous(labels =percent)
ggplot()+
geom_path(data=PltsData,
aes(y=CCYExposure, x = Date, group=FundCode),
stat= "identity") +
facet_grid(~ FundCode .) +
scale_y_continuous(labels =percent)
ggplot()+
geom_path(data=PltsData,
aes(y=CCYExposure, x = Date, group=FundCode),
stat= "identity") +
facet_grid(. ~FundCode) +
scale_y_continuous(labels =percent)
ggplot()+
geom_point(data=PltsData,
aes(y=CCYExposure, x = Date, group=FundCode),
stat= "identity") +
facet_grid(FundCode ~ .) +
scale_y_continuous(labels =percent)
ggplot()+
geom_line(data=PltsData,
aes(y=CCYExposure, x = Date, group=FundCode),
stat= "identity") +
facet_grid(FundCode ~ .) +
scale_y_continuous(labels =percent)
source('G:/GitHub/CCYexp/PlotHiRange.R', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
View(FundsOverThresh)
View(PltsData)
library(lattice)
xyplot(CCYExposure ~ Date|factor(FundCode),
data = PltsData,
panel = function(x,y) {
panel.grid(h-1, v=2)
I1 <- order(x)
llines(x[I1], y[I1], col=1)
}
}
library(lattice)
xyplot(CCYExposure ~ Date|factor(FundCode),
data = PltsData,
panel = function(x,y) {
panel.grid(h-1, v=2)
I1 <- order(x)
llines(x[I1], y[I1], col=1)
})
library(lattice)
xyplot(CCYExposure ~ Date|factor(FundCode),
data = PltsData,
panel = function(x,y) {
panel.grid(h=-1, v=2)
I1 <- order(x)
llines(x[I1], y[I1], col=1)
})
library(RODBC)
#########################################
#library(xlsx)
sqlFileCon <- file("GetRawData.sql", "r")
sqlString <- gsub("\t", " ", paste(readLines(sqlFileCon), collapse=" "))
channel <- odbcConnect("SQLServerVivaldi")
RawData <- as.data.frame(sqlQuery(channel, sqlString))
close(channel)
save(RawData, file = "DataSet.Rda")
##########################################
library(ggplot2)
library(zoo)
library(scales)
rm(list = ls())
load("DataSet.Rda")
RawData$Date <- as.Date(RawData$Date)
LastDate <- max(RawData$Date, na.rm=TRUE)
Last6mRaw <- RawData[RawData$Date >
as.Date(as.yearmon(LastDate) - 0.5, frac = 1) &
(!is.na(RawData$CCYExposure)),]
Last6mRaw$FundCode <- factor(Last6mRaw$FundCode)
FundsNo <- levels(Last6mRaw$FundCode)
FundCounts <- as.data.frame(sapply(split(Last6mRaw$FundCode, Last6mRaw$Date),
function(x) length(unique(x))))
FundDatesCounts <- as.data.frame(sapply(split(Last6mRaw$Date, Last6mRaw$FundCode),
function(x) length(unique(x))))
Ranges <- as.data.frame(t(sapply(split(Last6mRaw$CCYExposure, Last6mRaw$FundCode),
range)))
colnames(Ranges) <- c("Min", "Max")
Ranges$Range <- Ranges$Max-Ranges$Min
FOUNDsub <- which(rownames(Ranges) %in%
subset(rownames(Ranges),
subset = grepl(glob2rx("FOUND*"),
rownames(Ranges))))
threshold <- 0.1
FundsOverThresh <- Ranges[Ranges$Range > threshold &
!rownames(Ranges) %in% rownames(Ranges)[FOUNDsub],]
FundsOverThresh <- FundsOverThresh[order(-FundsOverThresh$Range),]
PltsData <- Last6mRaw[Last6mRaw$FundCode %in% rownames(FundsOverThresh),]
PltsData$FundCode <- factor(PltsData$FundCode)
levels(PltsData$FundCode)
ggplot()+
geom_line(data=PltsData,
aes(y=CCYExposure, x = Date, group=FundCode),
stat= "identity") +
facet_grid(FundCode ~ .) +
scale_y_continuous(labels =percent)
library(lattice)
xyplot(CCYExposure ~ Date|factor(FundCode),
data = PltsData,
panel = function(x,y) {
panel.grid(h=-1, v=2)
I1 <- order(x)
llines(x[I1], y[I1], col=1)
})
library(RODBC)
source('G:/GitHub/CCYexp/CreateDataset.R', echo=TRUE)
source('G:/GitHub/CCYexp/CreateDataset.R', echo=TRUE)
source('G:/GitHub/CCYexp/PlotHiRangeLattice.R', echo=TRUE)
View(RawData)
max(RawData$Date)
source('~/.active-rstudio-document', echo=TRUE)
sqlFileCon.close
close(sqlFileCon)
source('~/.active-rstudio-document', echo=TRUE)
View(RawData)
rawData[rawData$Fund = 'MIHYB':]
rawData[rawData$Fund == 'MIHYB':]
rawData[rawData$Fund = 'MIHYB']
rawData[rawData$Fund == "MIHYB",]
RawData[rawData$Fund == "MIHYB",]
RawData[RawData$Fund == "MIHYB",]
plot(RawData[RawData$Fund == "MIHYB",])
View(RawData)
plot(RawData[RawData$Fund == "MIHYB",3],RawData[RawData$Fund == "MIHYB",2],)
plot(RawData[RawData$Fund == "MIHYB",3],RawData[RawData$Fund == "MIHYB",3],)
plot(RawData[RawData$Fund == "MIHYB",2],RawData[RawData$Fund == "MIHYB",3],)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
